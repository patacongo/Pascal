testall.sh compiles all (most) of the pascal source files in the src/ sub-directory.  The src/ sub-directory contains various pascal programs found by scouring the internet (most not attributed here.. sorry).  As of this writing, the following errors are reported when testall.sh is ran:

 1. Several test cases found on the internet failed because they involved the
    use of non-standard Pascal types('filename', 'list', 'word') and undefined
    functions, and  procedures (fsplit, addr).
    - Test cases using the list type probably have been removed;
    - For testing purposes, the filename type has been changed to the string type.
    - According to freepascal.org, fsplit is a procedure in a unit called DOS.  I am
      not sure how standard that unit is.
 2. Currently a set is limited to 32-bits so that they can be represented internally
    as a 32-bit bit set.
 3. Operations on type 'string' are not yet supported
 4. I/O operations on most types of arrays and VAR arrays are not fully
    implemented.  See src/107-quicksort.pas
 5. Forward references to variables before they are defined to not work.  See
    failure in src/108-pointerrecode.pas.
 6. Unit files with data declarations, but no implementation.

Successful test results are not shown.

########src/104-primes.pas########
Line 0:0012 Error 48 Token 3b

Line (in var section):
 12   sieve, primes : array[0..w] of set of 0..maxbit;

Where (in const section)
  8   maxbit = 58;

Error:
244 #define eSETRANGE        ((uint16_t) 0x48)

Analysis:
This is a consequence of the fact that sets are currently limited to 32-bits:

########src/106-bubblesort.pas########
Line 0:0025 Error 17 Token 29

Line:
 25                readln(a[size]);

Analysis:
Same as for src/107-quicksort.pas

########src/107-quicksort.pas########
Line 0:0024 Error 17 Token 29'

Line:
 24                readln(a[size]);

Where a is a formal parameter of type 'VAR a: IntArrType' and where

    CONST
        MaxElts = 50;
    TYPE
        IntArrType = ARRAY [1..MaxElts] OF Integer;

Error:
#define eINVARG          ((uint16_t) 0x17)

Token:
')'

Analysis:

Line:
#0  error (errcode=23) at perr.c:129
#1  0x000000010040bbba in readText (fileNumber=0) at pproc.c:470

          /* Otherwise, we fall through to process the ARRAY like any */
          /* expression */

        default :

          switch (varParm(exprUnknown, NULL))
            {
            ...
            default :
              error(eINVARG);  <<< HERE
              break;
            }
          break;

This error occurs because varParm() returns expArrayPtr but there is no code generation logic in the switch statement for that case.

########src/108-pointerrecode.pas########
Line 0:0004 Error 1e Token 01 (RECDATA)

Line:
type
  rptr = ^recdata; <<< HERE
  recdata = record 
    number : integer; 
    code : string; 
    nextrecord : rptr 
  end;

Error:
#define eINVTYPE         ((uint16_t) 0x1e)

Token:
#define tIDENT           0x01

Analysis:
Fails because recdata is not defined yet and the forward reference is not supported.

########src/109-findwords.pas########
Line 0:0018 Error 1e Token 01 (LIST)

After commenting out re-definition of boolean constants:

const
    { TRUE = 1;
      FALSE = 0; }

Line:
type
     listptr = ^list;  <<< HERE
     list = record
              line : integer;       { line number of occurrence     }
              nextline : listptr;   { link to next line number      }
              prevline : listptr    { link to previous line number  }
     end;

Error:
#define eINVTYPE         ((uint16_t) 0x1e)

Token:
#define tIDENT           0x01

Analysis:
Same problem as with src/108-pointerrecode.pas:  Use of forward reference to define a pointer variable fails.

########src/601-readfile.pas########
Line 0:0014 Error 09 Token 01 (assign)

Line:
 14    assign(f, 'students.dat');

Line:

Analysis:
assign() not yet supported

########src/602-writefile.pas########
Line 0:0014 Error 09 Token 01 (Assign)

Line:
 14   Assign(f,'students.dat');

Analysis:
assign() not yet supported

########src/603-appendfile.pas########
Line 0:0007 Error 09 Token 01 (assign)

Line:
 7   assign(myfile, 'contact.txt');

Analysis:
assign() not yet supported

########src/604-textfile.pas########
Line 0:0014 Error 09 Token 01 (assign)

Line:
 14   assign(f, 'students.dat');

Analysis:
assign() not yet supported

########src/605-subprogram.pas########
Line 0:0018 Error 0c Token 56

Line:
 18   rewrite(f, sizeof(data));

Error:
#define eFILE            ((uint16_t) 0x0c)

Token:
#define sVAR_PARM        0x56

Analysis:
Probably the same as DayIO.pas

########src/803-redirect.pas########
Line 0:0065 Error 1e Token 3d

Line:
 65         if (name = 'lstnavigation') or (name = 'navigation') or (name = 'goto') then

Error:
200 #define eINVTYPE         ((uint16_t) 0x1e)

Token:
 66 #define tEQ              ('=')

Analysis:
Failure occurs while processing the 'line' symbol:

  (gdb) p tkn_strt
  $2 = 0x80008a291 "NAME"

On the second time through simpleFactor
(gdb) bt
#0  error (errcode=30) at perr.c:128
#1  0x0000000100408d6e in simpleFactor (varPtr=0xffffc590, factorFlags=9 '\t') at pexpr.c:1649
&&&& simpleFactor: token=3d ('=') sKind=56
 93 #define sVAR_PARM        0x56

#2  0x0000000100408cbb in simpleFactor (varPtr=0xffffc590, factorFlags=9 '\t') at pexpr.c:1621
&&&& simpleFactor: token=3d ('=') sKind=4b
 81 #define sSTRING          0x4b /* String storage type */

#3  0x0000000100408240 in complexFactor () at pexpr.c:1171
...

The problem is that operations on the 'string' are not yet implemented.

########src/901-pageutils.pas########
Line 0:0654 Error 0f Token 45

Line:
 654 input = 1;

Error:
184 #define eIMPLEMENTATION  ((uint16_t) 0x0f)

Token:
 75 #define sFILE            0x45

Analysis:
This is a unit with constant/variable/procedure definitions.  It has no implementation section at the end as does a normal program file.

########sinecos.pas########
########unit-cosine.pas########
########unit-sine.pas########
########unit-data.pas########
########sinecos.pex########
sinecos.pex Loaded
Enter radians   : cos(0.707107)=0.707107
sin(0.707107)=-1049815400776833903362048.000000
sin(0.703117)**2 + cos(0.703117)**20.000000

Compiles, links, and runs OK but the results don't look right.

########worksched.pas########
Line 0:0055 Error 2e Token 2c

Error:
#define eRBRACKET        ((uint16_t) 0x2e)

Line:
 55        ScheduleType = ARRAY [HourType, DayType] OF EmployeeType;
where
 50        EmployeeType = string[EmployeeMaxLen];

Token: ','

Analysis:
The compiler did not recognize the second index.  Apparently multi-dimensioned arrays have problems.

########DayIO.pas########
Line 0:0089 Error 0c Token 56

Error:
#define eFILE            ((uint16_t) 0x0c)

Line:
            IF eoln(InFile) THEN

Token:
#define sVAR_PARM        0x56


Analysis:
This is an error in file handling (or perhaps a non-standard usage in the testfile).

The compiler currently only accepts file types as arguments to the PROGRAM keyword.  But this is a unit and declares the file as type text:


    PROCEDURE ReadDay
            (VAR InFile: TEXT;                (* Input file read from. *)
             VAR Day: DayType);                (* Returned day of the week value. *)

            WHILE (Ch = ' ') AND NOT eoln(InFile) DO
                BEGIN
                    read(InFile, Ch)
                END;

This then fails in fileFunc() where a FILE type is expected:

422           if (g_token != sFILE) error(eFILE);

But InFile is sVAR_PARM.

########worksched.pex########
ERROR: Could not open worksched.o: No such file or directory
ERROR: Error opening 'worksched.pex': 2
ERROR: Could not load worksched.pex