testall.sh compiles all (most) of the pascal source files in the src/ sub-
directory.  The src/ sub-directory contains various pascal programs found by
scouring the internet (most not attributed here.. sorry).  As of this
writing, the following errors are reported when testall.sh is ran:

 1. Several test cases found on the internet failed because they involved the
    use of non-standard Pascal types('filename', 'list', 'word', 'longword) and
    undefined functions, and  procedures (fsplit, addr).
    - Test cases using the list type probably have been removed (src/901-pageutils.pas
      which used longword has not yet been removed)
    - For testing purposes, the filename type has been changed to the string type.
 2. Smart Pascal has a Length function:
      function Length ( const SourceString : string ) : Integer;
      function Length ( const  SourceArray : array ) : Integer;
    The Length function returns either the number of characters in SourceString,
    or the number of elements in SourceArray. (See units/DayIO.pas)
    It is often used to loop around all characters in a string or elements in
    an array.
 3. Currently a set is limited to 32 elements so that they can be represented
    internally as a 32-bit bit set.
 4. I/O operations on most types of arrays and VAR arrays are not fully
    implemented.  See src/107-quicksort.pas
 5. Not all file I/O functions have been implemented.
 6. Forward references to variables before they are defined to not work.  See
    failure in src/108-pointerrecode.pas.
 7. Unit files with data declarations, but no implementation.
 8. There are a couple of files with initialization like:
      input = 1;
      output = 2;
    I am not sure what these mean and have just commented them out for now.
    Assignment of a numeric value to a file is not supported.

Successful test results are not shown.

########src/104-primes.pas########
Line 0:0012 Error 4c Token 3b

Line (in var section):
 12   sieve, primes : array[0..w] of set of 0..maxbit;

Where (in const section)
  8   maxbit = 58;

Error:
244 #define eSETRANGE        ((uint16_t) 0x48)

Analysis:
This is a consequence of the fact that sets are implemented as bitsets and
the bitset is currently limited to 32-bits:

########src/106-bubblesort.pas########
########src/107-quicksort.pas########

These two examples compile fine but cause an Runtime error:

Runtime error 0x80 -- Execution Stopped

I believe that is due to a missing generated of an indexed load instruction:

106-bubblesort.pas:
 45         FOR i := 1 TO size DO
 46             writeln(arr[i])

106-bubblesort.o1:
0000018a         PUSH  1    <file-number>
0000018d         DUPH       <file-number><file-number>
0000018e         LDH   6    <file-number><file-number><index>
00000191         PUSH  1    <file-number><file-number><index><min-value>
00000194         SUB        <file-number><file-number><index - min-value>
00000195         PUSH  2    <file-number><file-number><index - min-value><size>
00000198         MUL        <file-number><file-number><(index - min-value) * size>

This should be done in pas_ArrayIndex(), but the complexity is that the size
may be different depending on the base data type (which is available in
pas_ArrayIndex()).

########src/108-pointerrecode.pas########
Line 0:0004 Error 1e Token 01 (RECDATA)

Line:
type
  rptr = ^recdata; <<< HERE
  recdata = record
    number : integer;
    code : string;
    nextrecord : rptr
  end;

Error:
#define eINVTYPE         ((uint16_t) 0x1e)

Token:
#define tIDENT           0x01

Analysis:
Fails because recdata is not defined yet and the forward reference is not supported.

########src/109-findwords.pas########
Line 0:0018 Error 1e Token 01 (LIST)

After commenting out re-definition of boolean constants:

const
    { TRUE = 1;
      FALSE = 0; }

Line:
type
     listptr = ^list;  <<< HERE
     list = record
              line : integer;       { line number of occurrence     }
              nextline : listptr;   { link to next line number      }
              prevline : listptr    { link to previous line number  }
     end;

Error:
#define eINVTYPE         ((uint16_t) 0x1e)

Token:
#define tIDENT           0x01

Analysis:
Same problem as with src/108-pointerrecode.pas:  Use of forward reference to define a pointer variable fails.

########src/601-readfile.pas########
Line 0:0020 Error 1e Token 29

Line:
 20       writeln('Name: ',Student.s_name);
Where:
  2 type
  3    StudentRecord = Record
  4       s_name: String;
  5       s_addr: String;
  6       s_batchcode: String;
  7    end;

Error:
207 #define eINVTYPE         ((uint16_t) 0x1e)

Token: ')'

Analysis:
There is no logic to support type sSTRING in simpleFactor().  Any place an expression is expected and a string type is provided will fail.

########src/602-writefile.pas########
Line 0:0016 Error 1e Token 09

Line:
 16   Student.s_name := 'John Smith';
Where:
  2 type
  3    StudentRecord = Record
  4       s_name: String;
  5       s_addr: String;
  6       s_batchcode: String;
  7    end;


Error:
207 #define eINVTYPE         ((uint16_t) 0x1e)

Token:
 53 #define tASSIGN          0x09

Analysis:
Probably another issue related to missing string handling.

########src/603-appendfile.pas########
Line 0:0020 Error 2c Token 4b

Line:
 20      readln(myfile, info);

Error:
222 #define ePTRADR          ((uint16_t) 0x2c)

Token:
 83 #define sSTRING          0x4b /* String storage type */

Analysis:
Not yet analyzed.  Perhaps an issue related to string types.

########src/604-textfile.pas########
Line 0:0020 Error 1e Token 29

Line:
 20       writeln('Name: ',Student.s_name);
Where
  2 type
  3    StudentRecord = Record
  4       s_name: String;
  5       s_addr: String;
  6       s_batchcode: String;
  7    end;

Error:
207 #define eINVTYPE         ((uint16_t) 0x1e)

Token: ')'

Analysis:
Same as src/601-readfile.pas

########src/605-subprogram.pas########
Line 0:0052 Error 2c Token 4b

Line:
 52    readln(filename);
Where:O
  9    filename: string;

Error:
#define ePTRVAL          ((uint16_t) 0x2d)

Token:
#define sSTRING          0x4b /* String storage type */

Analysis:
This is another case of missing string handling logic.  The error is
generated in ptrFactor() while parsing the filename argume to the
readln functions:

2036          default :
2037            error(ePTRADR);
2038            break;

filename has a type of string and the string type is not handled in
the switch statement leading up to the error.

########src/803-redirect.pas########
Line 0:0065 Error 1e Token 3d

Line:
 65         if (name = 'lstnavigation') or (name = 'navigation') or (name = 'goto') then

Error:
200 #define eINVTYPE         ((uint16_t) 0x1e)

Token:
 66 #define tEQ              ('=')

Analysis:
Failure occurs while processing the 'line' symbol:

  (gdb) p tkn_strt
  $2 = 0x80008a291 "NAME"

On the second time through simpleFactor
(gdb) bt
#0  error (errcode=30) at perr.c:128
#1  0x0000000100408d6e in simpleFactor (varPtr=0xffffc590, factorFlags=9 '\t') at pexpr.c:1649
&&&& simpleFactor: token=3d ('=') sKind=56
 93 #define sVAR_PARM        0x56

#2  0x0000000100408cbb in simpleFactor (varPtr=0xffffc590, factorFlags=9 '\t') at pexpr.c:1621
&&&& simpleFactor: token=3d ('=') sKind=4b
 81 #define sSTRING          0x4b /* String storage type */

#3  0x0000000100408240 in complexFactor () at pexpr.c:1171
...

The problem is that operations on the 'string' are not yet implemented.

########src/901-pageutils.pas########
Line 0:0654 Error 0f Token 45

Line:
In TYPE definition section:
 954 ulong = longword;

Error:
184 #define eIMPLEMENTATION  ((uint16_t) 0x0f)

Token:
 75 #define sFILE            0x45

Analysis:
Type longword is not supported.

########sinecos.pas########
########unit-cosine.pas########
########unit-sine.pas########
########unit-data.pas########
########sinecos.pex########
sinecos.pex Loaded
Enter radians   : cos(0.707107)=0.707107
sin(0.707107)=-1049815400776833903362048.000000
sin(0.703117)**2 + cos(0.703117)**20.000000

Compiles, links, and runs OK but the results don't look right.

########worksched.pas########
Could not read POFF file, errcode=0x71


Error:
#define eRBRACKET        ((uint16_t) 0x2e)

Line:
 55        ScheduleType = ARRAY [HourType, DayType] OF EmployeeType;
where
 50        EmployeeType = string[EmployeeMaxLen];

Token: ','

Analysis:
The compiler did not recognize the second index.  Apparently multi-dimensioned arrays have problems.

########DayIO.pas########
Line 0:0122 Error 3a Token 01 (Length)

Error:
237 #define eUNDEFSYM        ((uint16_t) 0x3a)

Line:
122                     WHILE (Ch <> ' ') AND (Length(DayStr) < DaySize) DO

Token:
 44 #define tIDENT           0x01

Analysis:
Function Length() is not defined.  This appears to be a part of Smart Pascal?

########worksched.pex########
ERROR: Could not open worksched.o: No such file or directory
ERROR: Error opening 'worksched.pex': 2
ERROR: Could not load worksched.pex