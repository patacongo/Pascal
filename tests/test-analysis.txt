testall.sh compiles all (most) of the pascal source files in the src/ sub-directory.  The src/ sub-directory contains various pascal programs found by scouring the internet (most not attributed here.. sorry).  As of this writing, the following errors are reported when testall.sh is ran:

1. Several test cases fail because the involve use of non-standard Pascal types
   (filename and list) and undefined procedures (fsplit).
   test cases using the list type probably have been removed; For testing purposes,
   the filename type has been changed to the string type.
   According to freepascal.org, fsplit is a procedure in a unit called DOS.  I am
   not sure how standard that unit is.
2. Currently a set is limited to 32-bits to so that they can be represented internally
   as a 32-bit bit set.
3. Input procedures in writeln() take the file number as an optional first parameter.
   If the optional file parameter is not supplied then the file associated with the
   built-in variable input is tested.  Similarly, ouoptout procedures would default to
   the built-in output.
   This has been fixed for some functions (like eof and eoln) but not all cases have been verified.
4. Operations on type 'string' are no yet supported
5. Unit files with data declarations, but no implementation.
6. General usage of units.  Most of these are not skipped by testall.sh.
7. Additional issue with src/107-quicksort.pas that has not yet been analyzed.

Successful test results are not shown.

########src/104-primes.pas########
Line 0:0012 Error 47 Token 3b

Line (in var section):
 12   sieve, primes : array[0..w] of set of 0..maxbit;

Where (in const section)
  8   maxbit = 58;

Error:
244 #define eSETRANGE        ((uint16_t) 0x47)

Analysis:
This is a consequence of the fact that sets are currently limited to 32-bits:

########src/107-quicksort.pas########
Line 0:0024 Error 41 Token 29

Line:
 24                readln(a[size]);

Where a is a formal parameter of type 'VAR a: IntArrType' and where

    CONST
        MaxElts = 50;
    TYPE
        IntArrType = ARRAY [1..MaxElts] OF Integer;

Error:
238 #define eARRAYTYPE       ((uint16_t) 0x41)

Token:
')'

Analysis:

I see a different error when from GDB:

Fatal Error 23 -- Compilation aborted

Line:
#0  error (errcode=23) at perr.c:129
#1  0x000000010040bbba in readText (fileNumber=0) at pproc.c:470

          /* Otherwise, we fall through to process the ARRAY like any */
          /* expression */

        default :

          switch (varParm(exprUnknown, NULL))
            {
            ...
            default :
              error(eINVARG);  <<< HERE
              break;
            }
          break;

Error:
193 #define eINVARG          ((uint16_t) 0x17)

Token:
(gdb) p /x token
$1 = 0x29

Analysis:
Not sure.  This appears to be a limitation in the implementation for printing arrays.

########src/803-redirect.pas########
Line 0:0065 Error 1e Token 3d

Line:
 65         if (name = 'lstnavigation') or (name = 'navigation') or (name = 'goto') then

Error:
200 #define eINVTYPE         ((uint16_t) 0x1e)

Token:
 66 #define tEQ              ('=')

Analysis:
Failure occurs while processing the 'line' symbol:

  (gdb) p tkn_strt
  $2 = 0x80008a291 "NAME"

On the second time through simpleFactor
(gdb) bt
#0  error (errcode=30) at perr.c:128
#1  0x0000000100408d6e in simpleFactor (varPtr=0xffffc590, factorFlags=9 '\t') at pexpr.c:1649
&&&& simpleFactor: token=3d ('=') sKind=57
 93 #define sVAR_PARM        0x57

#2  0x0000000100408cbb in simpleFactor (varPtr=0xffffc590, factorFlags=9 '\t') at pexpr.c:1621
&&&& simpleFactor: token=3d ('=') sKind=4b
 81 #define sSTRING          0x4b /* String storage type */

#3  0x0000000100408240 in complexFactor () at pexpr.c:1171
...

The problem is that operations on the 'string' are not yet implemented.

########src/901-pageutils.pas########
Line 0:0654 Error 0f Token 45

Line:
 654 input = 1;

Error:
184 #define eIMPLEMENTATION  ((uint16_t) 0x0f)

Token:
 75 #define sFILE            0x45

Analysis:
This is a unit with constant/variable/procedure definitions.  It has no implementation section at the end as does a normal program file.

########src/501-uses.pex########
Fatal Error 41 -- Aborting

Error:
238 #define eARRAYTYPE       ((uint16_t) 0x41)

Analysis:
This is an issue with using units.  They appear not to work.
