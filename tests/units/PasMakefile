############################################################################
# PasMakefile
# Host system makefile
#
#   Copyright (C) 2022 Gregory Nutt. All rights reserved.
#   Author: Gregory Nutt <gnutt@nuttx.org>
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in
#    the documentation and/or other materials provided with the
#    distribution.
# 3. Neither the name of the copyright holder nor the names of its
#    contributors may be used to endorse or promote products derived from
#    this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
# FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
# COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
# OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
# AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
# ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
############################################################################
#
# Directories
#

PSRCDIR  = ${shell pwd}
PTESTDIR = $(PSRCDIR)/..
PASCAL   = $(PTESTDIR)/..
PAPPSDIR = $(PASCAL)/papps
PUNITDIR = $(PAPPSDIR)/punits

include $(PASCAL)/tools/Config.mk

#
# Tools
#

PASOPTS   = -I. -I$(PUNITDIR)

#
# Objects and targets
#

SUFFIXES  += .pas .o1 .o .pex .err .lst

STDUNITS  := $(PUNITDIR)/Machine.pas $(PUNITDIR)/FileUtils.pas
PSRCS     := $(wildcard *.pas) $(STDUNITS)
POBJS1     = $(PSRCS:.pas=.o1)
POBJS      = $(PSRCS:.pas=.o)

DOITSRC    = DoIt.pas SayIt.pas
DOITOBJS   = $(DOITSRC:.pas=.o)

SINCOSSRC  = sinecos.pas unit-cosine.pas unit-sine.pas unit-data.pas
SINCOSOBJS = $(SINCOSSRC:.pas=.o)

WKSCHDSRC  = worksched.pas DayIO.pas
WKSCHDOBJS = $(WKSCHDSRC:.pas=.o)

RDDIRSRC   = ReadDir.pas $(PUNITDIR)/Machine.pas $(PUNITDIR)/FileUtils.pas
RDDIROBJS  = $(RDDIRSRC:.pas=.o)

TOKENSRC   = Tokenize.pas $(PUNITDIR)/Machine.pas $(PUNITDIR)/StringUtils.pas
TOKENOBJS  = $(TOKENSRC:.pas=.o)

PEX        = ReadDir.pex worksched.pex sinecos.pex DoIt.pex Tokenize.pex

#
# Targets
#

all: $(PEX)
.PHONY: all clean distclean

$(POBJS1): %.o1: %.pas
	$(Q) echo "  $@"
	$(Q) $(PAS) $(PASOPTS) $<

$(POBJS): %.o: %.o1
	$(Q) echo "  $@"
	$(Q) $(POPT) $(POPTOPTS) $<

DoIt.pex : $(DOITOBJS)
	$(Q) echo "  $@"
	$(Q) $(PLINK) $(DOITOBJS) $@

sinecos.pex : $(SINCOSOBJS)
	$(Q) echo "  $@"
	$(Q) $(PLINK) $(SINCOSOBJS) $@

worksched.pex : $(WKSCHDOBJS)
	$(Q) echo "  $@"
	$(Q) $(PLINK) $(WKSCHDOBJS) $@

ReadDir.pex : $(RDDIROBJS)
	$(Q) echo "  $@"
	$(Q) $(PLINK) $(RDDIROBJS) $@

Tokenize.pex : $(TOKENOBJS)
	$(Q) echo "  $@"
	$(Q) $(PLINK) $(TOKENOBJS) $@

clean:
	$(Q) $(RM) *.o *.o1 *.pex *.err *.lst core *~

distclean: clean
