############################################################################
# PasMakefile
# Host system makefile
#
#   Copyright (C) 2022 Gregory Nutt. All rights reserved.
#   Author: Gregory Nutt <gnutt@nuttx.org>
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in
#    the documentation and/or other materials provided with the
#    distribution.
# 3. Neither the name of the copyright holder nor the names of its
#    contributors may be used to endorse or promote products derived from
#    this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
# FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
# COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
# OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
# AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
# ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
############################################################################
#
# Directories
#

PUNITDIR  = ${shell pwd}
PAPPSDIR  = $(PUNITDIR)/..
PIMAGEDIR = $(PAPPSDIR)/image

PASCAL    = $(PAPPSDIR)/..
include $(PASCAL)/tools/Config.mk

ifdef TOPDIR
include $(TOPDIR)/.config
else
include $(PASCAL)/.config
endif

#
# Tools
#

PASOPTS   = -I$(PUNITDIR)

#
# Objects and targets
#

SUFFIXES  += .pas .o1 .o .err .lst

PSRCS  := $(wildcard *.pas)
ifeq ($(wildcard Machine.pas),)
PSRCS  += Machine.pas
endif

POBJS1  = $(PSRCS:.pas=.o1)
POBJS   = $(PSRCS:.pas=.o)

#
# Targets
#

all: Machine.o $(POBJS)
.PHONY: all clean distclean

Machine.pas :
	$(Q) echo "{ Machine.pas -- Autogenerated! Do not edit. }" >$(PUNITDIR)/Machine.pas
	$(Q) echo "" >>$(PUNITDIR)/Machine.pas
	$(Q) echo "UNIT Machine;" >>$(PUNITDIR)/Machine.pas
	$(Q) echo "" >>$(PUNITDIR)/Machine.pas
	$(Q) echo "INTERFACE" >>$(PUNITDIR)/Machine.pas
	$(Q) echo "  CONST" >>$(PUNITDIR)/Machine.pas
	$(Q) echo "    MachinePointerSize = $(CONFIG_PASCAL_POINTERSIZE);" >>$(PUNITDIR)/Machine.pas
	$(Q) echo "    MachinePointerWords = MachinePointerSize DIV 2" >>$(PUNITDIR)/Machine.pas
	$(Q) echo "" >>$(PUNITDIR)/Machine.pas
	$(Q) echo "  TYPE" >>$(PUNITDIR)/Machine.pas
	$(Q) echo "    TMachinePointer = ARRAY[1..MachinePointerWords] OF WORD" >>$(PUNITDIR)/Machine.pas
	$(Q) echo "" >>$(PUNITDIR)/Machine.pas
	$(Q) echo "IMPLEMENTATION" >>$(PUNITDIR)/Machine.pas
	$(Q) echo "END." >>$(PUNITDIR)/Machine.pas

$(POBJS1): %.o1: %.pas
	$(Q) echo "  $@"
	$(Q) $(PAS) $(PASOPTS) $<

$(POBJS): %.o: %.o1
	$(Q) echo "  $@"
	$(Q) $(POPT) $(POPTOPTS) $<

clean:
	$(Q) $(RM) *.o *.o1 *.err *.lst core *~

distclean: clean
	$(Q) $(RM) Machine.pas
